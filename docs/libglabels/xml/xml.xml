<?xml version="1.0"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN" 
               "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd">

<refentry id="libglabels-xml">
<refmeta>
<refentrytitle role="top_of_page" id="libglabels-xml.top_of_page">XML Helper Functions</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>LIBGLABELS Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>XML Helper Functions</refname>
<refpurpose>Functions to help format and parse glabels XML properties</refpurpose>
</refnamediv>

<refsynopsisdiv id="libglabels-xml.synopsis" role="synopsis">
<title role="synopsis.title">Synopsis</title>

<synopsis>

#include &lt;libglabels/xml.h&gt;

#define             <link linkend="LGL-XML-NAME-SPACE--CAPS">LGL_XML_NAME_SPACE</link>

<link linkend="gchar">gchar</link> *             <link linkend="lgl-xml-get-prop-string">lgl_xml_get_prop_string</link>             (<link linkend="xmlNodePtr">xmlNodePtr</link> node,
                                                         const <link linkend="gchar">gchar</link> *property,
                                                         const <link linkend="gchar">gchar</link> *default_val);
<link linkend="gchar">gchar</link> *             <link linkend="lgl-xml-get-prop-i18n-string">lgl_xml_get_prop_i18n_string</link>        (<link linkend="xmlNodePtr">xmlNodePtr</link> node,
                                                         const <link linkend="gchar">gchar</link> *property,
                                                         const <link linkend="gchar">gchar</link> *default_val);
<link linkend="gdouble">gdouble</link>             <link linkend="lgl-xml-get-prop-double">lgl_xml_get_prop_double</link>             (<link linkend="xmlNodePtr">xmlNodePtr</link> node,
                                                         const <link linkend="gchar">gchar</link> *property,
                                                         <link linkend="gdouble">gdouble</link> default_val);
<link linkend="gboolean">gboolean</link>            <link linkend="lgl-xml-get-prop-boolean">lgl_xml_get_prop_boolean</link>            (<link linkend="xmlNodePtr">xmlNodePtr</link> node,
                                                         const <link linkend="gchar">gchar</link> *property,
                                                         <link linkend="gboolean">gboolean</link> default_val);
<link linkend="gint">gint</link>                <link linkend="lgl-xml-get-prop-int">lgl_xml_get_prop_int</link>                (<link linkend="xmlNodePtr">xmlNodePtr</link> node,
                                                         const <link linkend="gchar">gchar</link> *property,
                                                         <link linkend="gint">gint</link> default_val);
<link linkend="guint">guint</link>               <link linkend="lgl-xml-get-prop-uint">lgl_xml_get_prop_uint</link>               (<link linkend="xmlNodePtr">xmlNodePtr</link> node,
                                                         const <link linkend="gchar">gchar</link> *property,
                                                         <link linkend="guint">guint</link> default_val);
<link linkend="gdouble">gdouble</link>             <link linkend="lgl-xml-get-prop-length">lgl_xml_get_prop_length</link>             (<link linkend="xmlNodePtr">xmlNodePtr</link> node,
                                                         const <link linkend="gchar">gchar</link> *property,
                                                         <link linkend="gdouble">gdouble</link> default_val);

<link linkend="void">void</link>                <link linkend="lgl-xml-set-prop-string">lgl_xml_set_prop_string</link>             (<link linkend="xmlNodePtr">xmlNodePtr</link> node,
                                                         const <link linkend="gchar">gchar</link> *property,
                                                         const <link linkend="gchar">gchar</link> *val);
<link linkend="void">void</link>                <link linkend="lgl-xml-set-prop-double">lgl_xml_set_prop_double</link>             (<link linkend="xmlNodePtr">xmlNodePtr</link> node,
                                                         const <link linkend="gchar">gchar</link> *property,
                                                         <link linkend="gdouble">gdouble</link> val);
<link linkend="void">void</link>                <link linkend="lgl-xml-set-prop-boolean">lgl_xml_set_prop_boolean</link>            (<link linkend="xmlNodePtr">xmlNodePtr</link> node,
                                                         const <link linkend="gchar">gchar</link> *property,
                                                         <link linkend="gboolean">gboolean</link> val);
<link linkend="void">void</link>                <link linkend="lgl-xml-set-prop-int">lgl_xml_set_prop_int</link>                (<link linkend="xmlNodePtr">xmlNodePtr</link> node,
                                                         const <link linkend="gchar">gchar</link> *property,
                                                         <link linkend="gint">gint</link> val);
<link linkend="void">void</link>                <link linkend="lgl-xml-set-prop-uint-hex">lgl_xml_set_prop_uint_hex</link>           (<link linkend="xmlNodePtr">xmlNodePtr</link> node,
                                                         const <link linkend="gchar">gchar</link> *property,
                                                         <link linkend="guint">guint</link> val);
<link linkend="void">void</link>                <link linkend="lgl-xml-set-prop-length">lgl_xml_set_prop_length</link>             (<link linkend="xmlNodePtr">xmlNodePtr</link> node,
                                                         const <link linkend="gchar">gchar</link> *property,
                                                         <link linkend="gdouble">gdouble</link> val);

<link linkend="gboolean">gboolean</link>            <link linkend="lgl-xml-is-node">lgl_xml_is_node</link>                     (<link linkend="xmlNodePtr">xmlNodePtr</link> node,
                                                         const <link linkend="gchar">gchar</link> *name);
<link linkend="gchar">gchar</link> *             <link linkend="lgl-xml-get-node-content">lgl_xml_get_node_content</link>            (<link linkend="xmlNodePtr">xmlNodePtr</link> node);

<link linkend="void">void</link>                <link linkend="lgl-xml-set-default-units">lgl_xml_set_default_units</link>           (<link linkend="lglUnitsType">lglUnitsType</link> units);
</synopsis>
</refsynopsisdiv>









<refsect1 id="libglabels-xml.description" role="desc">
<title role="desc.title">Description</title>
<para>
This section describes a number of "helper" functions for formatting and
parsing various types of properties for tags in glabels XML file formats.
</para>
<para>
These functions are basically wrappers to functions from libxml2.
</para>
</refsect1>

<refsect1 id="libglabels-xml.details" role="details">
<title role="details.title">Details</title>
<refsect2 id="LGL-XML-NAME-SPACE--CAPS" role="macro">
<title>LGL_XML_NAME_SPACE</title>
<indexterm zone="LGL-XML-NAME-SPACE--CAPS"><primary sortas="LGL_XML_NAME_SPACE">LGL_XML_NAME_SPACE</primary></indexterm><programlisting>#define LGL_XML_NAME_SPACE "http://snaught.com/glabels/2.2/"
</programlisting>
<para>
</para></refsect2>
<refsect2 id="lgl-xml-get-prop-string" role="function">
<title>lgl_xml_get_prop_string ()</title>
<indexterm zone="lgl-xml-get-prop-string"><primary sortas="lgl_xml_get_prop_string">lgl_xml_get_prop_string</primary></indexterm><programlisting><link linkend="gchar">gchar</link> *             lgl_xml_get_prop_string             (<link linkend="xmlNodePtr">xmlNodePtr</link> node,
                                                         const <link linkend="gchar">gchar</link> *property,
                                                         const <link linkend="gchar">gchar</link> *default_val);</programlisting>
<para>
Return value of property as a string.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>node</parameter>&#160;:</term>
<listitem><simpara>        the libxml2 <link linkend="xmlNodePtr"><type>xmlNodePtr</type></link> of the node
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>property</parameter>&#160;:</term>
<listitem><simpara>    the property name
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>default_val</parameter>&#160;:</term>
<listitem><simpara> a default value to return if property not found
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> the property as a pointer to a gchar string.  This string should
         be freed with <link linkend="g-free"><function>g_free()</function></link>.

</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="lgl-xml-get-prop-i18n-string" role="function">
<title>lgl_xml_get_prop_i18n_string ()</title>
<indexterm zone="lgl-xml-get-prop-i18n-string"><primary sortas="lgl_xml_get_prop_i18n_string">lgl_xml_get_prop_i18n_string</primary></indexterm><programlisting><link linkend="gchar">gchar</link> *             lgl_xml_get_prop_i18n_string        (<link linkend="xmlNodePtr">xmlNodePtr</link> node,
                                                         const <link linkend="gchar">gchar</link> *property,
                                                         const <link linkend="gchar">gchar</link> *default_val);</programlisting>
<para>
Return value of a translatable property as a string.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>node</parameter>&#160;:</term>
<listitem><simpara>        the libxml2 <link linkend="xmlNodePtr"><type>xmlNodePtr</type></link> of the node
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>property</parameter>&#160;:</term>
<listitem><simpara>    the property name
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>default_val</parameter>&#160;:</term>
<listitem><simpara> a default value to return if property not found
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> the property as a pointer to a gchar string.  This string should
         be freed with <link linkend="g-free"><function>g_free()</function></link>.

</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="lgl-xml-get-prop-double" role="function">
<title>lgl_xml_get_prop_double ()</title>
<indexterm zone="lgl-xml-get-prop-double"><primary sortas="lgl_xml_get_prop_double">lgl_xml_get_prop_double</primary></indexterm><programlisting><link linkend="gdouble">gdouble</link>             lgl_xml_get_prop_double             (<link linkend="xmlNodePtr">xmlNodePtr</link> node,
                                                         const <link linkend="gchar">gchar</link> *property,
                                                         <link linkend="gdouble">gdouble</link> default_val);</programlisting>
<para>
Return value of property as a double.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>node</parameter>&#160;:</term>
<listitem><simpara>        the libxml2 <link linkend="xmlNodePtr"><type>xmlNodePtr</type></link> of the node
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>property</parameter>&#160;:</term>
<listitem><simpara>    the property name
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>default_val</parameter>&#160;:</term>
<listitem><simpara> a default value to return if property not found
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> the property as a double.

</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="lgl-xml-get-prop-boolean" role="function">
<title>lgl_xml_get_prop_boolean ()</title>
<indexterm zone="lgl-xml-get-prop-boolean"><primary sortas="lgl_xml_get_prop_boolean">lgl_xml_get_prop_boolean</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            lgl_xml_get_prop_boolean            (<link linkend="xmlNodePtr">xmlNodePtr</link> node,
                                                         const <link linkend="gchar">gchar</link> *property,
                                                         <link linkend="gboolean">gboolean</link> default_val);</programlisting>
<para>
Return value of property as a boolean.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>node</parameter>&#160;:</term>
<listitem><simpara>        the libxml2 <link linkend="xmlNodePtr"><type>xmlNodePtr</type></link> of the node
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>property</parameter>&#160;:</term>
<listitem><simpara>    the property name
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>default_val</parameter>&#160;:</term>
<listitem><simpara> a default value to return if property not found
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> the property as a boolean.

</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="lgl-xml-get-prop-int" role="function">
<title>lgl_xml_get_prop_int ()</title>
<indexterm zone="lgl-xml-get-prop-int"><primary sortas="lgl_xml_get_prop_int">lgl_xml_get_prop_int</primary></indexterm><programlisting><link linkend="gint">gint</link>                lgl_xml_get_prop_int                (<link linkend="xmlNodePtr">xmlNodePtr</link> node,
                                                         const <link linkend="gchar">gchar</link> *property,
                                                         <link linkend="gint">gint</link> default_val);</programlisting>
<para>
Return value of property as an integer.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>node</parameter>&#160;:</term>
<listitem><simpara>        the libxml2 <link linkend="xmlNodePtr"><type>xmlNodePtr</type></link> of the node
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>property</parameter>&#160;:</term>
<listitem><simpara>    the property name
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>default_val</parameter>&#160;:</term>
<listitem><simpara> a default value to return if property not found
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> the property as an integer.

</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="lgl-xml-get-prop-uint" role="function">
<title>lgl_xml_get_prop_uint ()</title>
<indexterm zone="lgl-xml-get-prop-uint"><primary sortas="lgl_xml_get_prop_uint">lgl_xml_get_prop_uint</primary></indexterm><programlisting><link linkend="guint">guint</link>               lgl_xml_get_prop_uint               (<link linkend="xmlNodePtr">xmlNodePtr</link> node,
                                                         const <link linkend="gchar">gchar</link> *property,
                                                         <link linkend="guint">guint</link> default_val);</programlisting>
<para>
Return value of property (usually formatted in hex) as an unsigned integer.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>node</parameter>&#160;:</term>
<listitem><simpara>        the libxml2 <link linkend="xmlNodePtr"><type>xmlNodePtr</type></link> of the node
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>property</parameter>&#160;:</term>
<listitem><simpara>    the property name
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>default_val</parameter>&#160;:</term>
<listitem><simpara> a default value to return if property not found
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> the property as an unsigned integer.

</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="lgl-xml-get-prop-length" role="function">
<title>lgl_xml_get_prop_length ()</title>
<indexterm zone="lgl-xml-get-prop-length"><primary sortas="lgl_xml_get_prop_length">lgl_xml_get_prop_length</primary></indexterm><programlisting><link linkend="gdouble">gdouble</link>             lgl_xml_get_prop_length             (<link linkend="xmlNodePtr">xmlNodePtr</link> node,
                                                         const <link linkend="gchar">gchar</link> *property,
                                                         <link linkend="gdouble">gdouble</link> default_val);</programlisting>
<para>
Return value of a length property as a double, converting to internal
units (points).  The property is expected to be formatted as a number
followed by a units string.  If there is no units string, the length
is assumed to be in points.  Valid units strings are "pt" for points,
"in" for inches, "mm" for millimeters, "cm" for centimeters, and
"pc" for picas.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>node</parameter>&#160;:</term>
<listitem><simpara>        the libxml2 <link linkend="xmlNodePtr"><type>xmlNodePtr</type></link> of the node
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>property</parameter>&#160;:</term>
<listitem><simpara>    the property name
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>default_val</parameter>&#160;:</term>
<listitem><simpara> a default value to return if property not found
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> the length in points.

</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="lgl-xml-set-prop-string" role="function">
<title>lgl_xml_set_prop_string ()</title>
<indexterm zone="lgl-xml-set-prop-string"><primary sortas="lgl_xml_set_prop_string">lgl_xml_set_prop_string</primary></indexterm><programlisting><link linkend="void">void</link>                lgl_xml_set_prop_string             (<link linkend="xmlNodePtr">xmlNodePtr</link> node,
                                                         const <link linkend="gchar">gchar</link> *property,
                                                         const <link linkend="gchar">gchar</link> *val);</programlisting>
<para>
Set a property from a string.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>node</parameter>&#160;:</term>
<listitem><simpara>        the libxml2 <link linkend="xmlNodePtr"><type>xmlNodePtr</type></link> of the node
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>property</parameter>&#160;:</term>
<listitem><simpara>    the property name
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>val</parameter>&#160;:</term>
<listitem><simpara>         the value to set
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="lgl-xml-set-prop-double" role="function">
<title>lgl_xml_set_prop_double ()</title>
<indexterm zone="lgl-xml-set-prop-double"><primary sortas="lgl_xml_set_prop_double">lgl_xml_set_prop_double</primary></indexterm><programlisting><link linkend="void">void</link>                lgl_xml_set_prop_double             (<link linkend="xmlNodePtr">xmlNodePtr</link> node,
                                                         const <link linkend="gchar">gchar</link> *property,
                                                         <link linkend="gdouble">gdouble</link> val);</programlisting>
<para>
Set a property from a double.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>node</parameter>&#160;:</term>
<listitem><simpara>        the libxml2 <link linkend="xmlNodePtr"><type>xmlNodePtr</type></link> of the node
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>property</parameter>&#160;:</term>
<listitem><simpara>    the property name
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>val</parameter>&#160;:</term>
<listitem><simpara>         the value to set
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="lgl-xml-set-prop-boolean" role="function">
<title>lgl_xml_set_prop_boolean ()</title>
<indexterm zone="lgl-xml-set-prop-boolean"><primary sortas="lgl_xml_set_prop_boolean">lgl_xml_set_prop_boolean</primary></indexterm><programlisting><link linkend="void">void</link>                lgl_xml_set_prop_boolean            (<link linkend="xmlNodePtr">xmlNodePtr</link> node,
                                                         const <link linkend="gchar">gchar</link> *property,
                                                         <link linkend="gboolean">gboolean</link> val);</programlisting>
<para>
Set a property from a boolean.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>node</parameter>&#160;:</term>
<listitem><simpara>        the libxml2 <link linkend="xmlNodePtr"><type>xmlNodePtr</type></link> of the node
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>property</parameter>&#160;:</term>
<listitem><simpara>    the property name
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>val</parameter>&#160;:</term>
<listitem><simpara>         the value to set
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="lgl-xml-set-prop-int" role="function">
<title>lgl_xml_set_prop_int ()</title>
<indexterm zone="lgl-xml-set-prop-int"><primary sortas="lgl_xml_set_prop_int">lgl_xml_set_prop_int</primary></indexterm><programlisting><link linkend="void">void</link>                lgl_xml_set_prop_int                (<link linkend="xmlNodePtr">xmlNodePtr</link> node,
                                                         const <link linkend="gchar">gchar</link> *property,
                                                         <link linkend="gint">gint</link> val);</programlisting>
<para>
Set a property from an integer.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>node</parameter>&#160;:</term>
<listitem><simpara>        the libxml2 <link linkend="xmlNodePtr"><type>xmlNodePtr</type></link> of the node
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>property</parameter>&#160;:</term>
<listitem><simpara>    the property name
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>val</parameter>&#160;:</term>
<listitem><simpara>         the value to set
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="lgl-xml-set-prop-uint-hex" role="function">
<title>lgl_xml_set_prop_uint_hex ()</title>
<indexterm zone="lgl-xml-set-prop-uint-hex"><primary sortas="lgl_xml_set_prop_uint_hex">lgl_xml_set_prop_uint_hex</primary></indexterm><programlisting><link linkend="void">void</link>                lgl_xml_set_prop_uint_hex           (<link linkend="xmlNodePtr">xmlNodePtr</link> node,
                                                         const <link linkend="gchar">gchar</link> *property,
                                                         <link linkend="guint">guint</link> val);</programlisting>
<para>
Set a property from an unsigned integer and format in hex.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>node</parameter>&#160;:</term>
<listitem><simpara>        the libxml2 <link linkend="xmlNodePtr"><type>xmlNodePtr</type></link> of the node
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>property</parameter>&#160;:</term>
<listitem><simpara>    the property name
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>val</parameter>&#160;:</term>
<listitem><simpara>         the value to set
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="lgl-xml-set-prop-length" role="function">
<title>lgl_xml_set_prop_length ()</title>
<indexterm zone="lgl-xml-set-prop-length"><primary sortas="lgl_xml_set_prop_length">lgl_xml_set_prop_length</primary></indexterm><programlisting><link linkend="void">void</link>                lgl_xml_set_prop_length             (<link linkend="xmlNodePtr">xmlNodePtr</link> node,
                                                         const <link linkend="gchar">gchar</link> *property,
                                                         <link linkend="gdouble">gdouble</link> val);</programlisting>
<para>
Set a property from a length, performing any necessary conversion.
Length properties are formatted as a number followed by a units string.
The units of the formatted property is determined by the most recent call to
<link linkend="lgl-xml-set-default-units"><function>lgl_xml_set_default_units()</function></link>.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>node</parameter>&#160;:</term>
<listitem><simpara>        the libxml2 <link linkend="xmlNodePtr"><type>xmlNodePtr</type></link> of the node
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>property</parameter>&#160;:</term>
<listitem><simpara>    the property name
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>val</parameter>&#160;:</term>
<listitem><simpara>         the length to set in internal units (points)
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="lgl-xml-is-node" role="function">
<title>lgl_xml_is_node ()</title>
<indexterm zone="lgl-xml-is-node"><primary sortas="lgl_xml_is_node">lgl_xml_is_node</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            lgl_xml_is_node                     (<link linkend="xmlNodePtr">xmlNodePtr</link> node,
                                                         const <link linkend="gchar">gchar</link> *name);</programlisting>
<para>
Test if a node name matches given name.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>node</parameter>&#160;:</term>
<listitem><simpara>        the libxml2 <link linkend="xmlNodePtr"><type>xmlNodePtr</type></link> of the node
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>name</parameter>&#160;:</term>
<listitem><simpara>    the node name
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> TRUE if the name of the node matches.  Otherwise FALSE.

</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="lgl-xml-get-node-content" role="function">
<title>lgl_xml_get_node_content ()</title>
<indexterm zone="lgl-xml-get-node-content"><primary sortas="lgl_xml_get_node_content">lgl_xml_get_node_content</primary></indexterm><programlisting><link linkend="gchar">gchar</link> *             lgl_xml_get_node_content            (<link linkend="xmlNodePtr">xmlNodePtr</link> node);</programlisting>
<para>
Get the content of a node.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>node</parameter>&#160;:</term>
<listitem><simpara>        the libxml2 <link linkend="xmlNodePtr"><type>xmlNodePtr</type></link> of the node
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> the property as a pointer to a gchar string.  This string should
         be freed with <link linkend="g-free"><function>g_free()</function></link>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="lgl-xml-set-default-units" role="function">
<title>lgl_xml_set_default_units ()</title>
<indexterm zone="lgl-xml-set-default-units"><primary sortas="lgl_xml_set_default_units">lgl_xml_set_default_units</primary></indexterm><programlisting><link linkend="void">void</link>                lgl_xml_set_default_units           (<link linkend="lglUnitsType">lglUnitsType</link> units);</programlisting>
<para>
Set the default units when formatting lengths.  See
<link linkend="lgl-xml-set-prop-length"><function>lgl_xml_set_prop_length()</function></link>.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>units</parameter>&#160;:</term>
<listitem><simpara>       default units selection (<link linkend="lglUnitsType"><type>lglUnitsType</type></link>)
</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>




</refentry>
